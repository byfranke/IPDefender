# IPDefender Pro v2.0.0 - Configuration Template
# ==================================================
# Copy this file to config.yaml and configure your settings
# IMPORTANT: Never commit real API keys to version control!

# System Configuration
system:
  # Logging level: DEBUG, INFO, WARNING, ERROR, CRITICAL
  log_level: INFO
  
  # Log file location (will be created automatically)
  log_file: "/var/log/ipdefender/ipdefender.log"
  
  # Enable/disable debug mode
  debug: false
  
  # Maximum number of concurrent operations
  max_workers: 4

# Database Configuration
database:
  # Database URL - Use PostgreSQL for production
  # Examples:
  # SQLite: "sqlite:///ipdefender.db"
  # PostgreSQL: "postgresql://user:password@localhost/ipdefender"
  url: "sqlite:///ipdefender.db"
  
  # Connection pool settings
  pool_size: 20
  max_overflow: 30
  pool_timeout: 30
  pool_recycle: 3600
  
  # Echo SQL queries (for debugging only)
  echo: false

# Threat Intelligence Providers
threat_intelligence:
  # Global settings
  cache_ttl: 3600  # Cache results for 1 hour
  timeout: 30      # Request timeout in seconds
  
  providers:
    # AbuseIPDB - IP reputation database
    abuseipdb:
      enabled: false
      api_key: "YOUR_ABUSEIPDB_API_KEY_HERE"
      base_url: "https://api.abuseipdb.com/api/v2"
      confidence_threshold: 75
      max_age_days: 90
    
    # VirusTotal - File and IP analysis
    virustotal:
      enabled: false
      api_key: "YOUR_VIRUSTOTAL_API_KEY_HERE" 
      base_url: "https://www.virustotal.com/api/v3"
      wait_time: 15  # Wait time between requests
      
    # URLVoid - URL reputation
    urlvoid:
      enabled: false
      api_key: "YOUR_URLVOID_API_KEY_HERE"
      base_url: "https://api.urlvoid.com/v1"
      
    # Custom threat feeds
    custom_feeds:
      enabled: false
      feeds:
        - name: "internal_blacklist"
          url: "https://your-internal-feed.com/blacklist.txt"
          format: "text"  # text, json, csv
          update_interval: 3600

# Firewall Providers
firewall:
  providers:
    # Cloudflare Firewall Rules
    cloudflare:
      enabled: false
      api_token: "YOUR_CLOUDFLARE_TOKEN_HERE"
      zone_id: "YOUR_ZONE_ID_HERE"
      base_url: "https://api.cloudflare.com/client/v4"
      
      # Rule configuration
      default_action: "block"
      rule_description: "IPDefender Pro Auto-Block"
      
    # AWS WAF (example)
    aws_waf:
      enabled: false
      access_key_id: "YOUR_AWS_ACCESS_KEY_ID"
      secret_access_key: "YOUR_AWS_SECRET_ACCESS_KEY"
      region: "us-east-1"
      web_acl_id: "YOUR_WEB_ACL_ID"
      
    # iptables (local firewall)
    iptables:
      enabled: false
      chain: "INPUT"
      target: "DROP"
      
    # fail2ban integration
    fail2ban:
      enabled: false
      jail_name: "ipdefender"
      bantime: 3600
      findtime: 600
      maxretry: 3

# Response Engine Configuration
response:
  # Automatic response settings
  auto_response:
    enabled: true
    threshold_score: 80  # Automatically block IPs with score >= 80
    
  # Response actions (executed in order)
  actions:
    - name: "log_threat"
      enabled: true
      priority: 1
      
    - name: "notify_admin"
      enabled: true
      priority: 2
      
    - name: "block_ip"
      enabled: true
      priority: 3
      threshold: 70
      
    - name: "update_feeds"
      enabled: false
      priority: 4

# Monitoring and Metrics
monitoring:
  # Prometheus metrics
  metrics:
    enabled: true
    port: 9090
    path: "/metrics"
    
  # Health check endpoint
  health_check:
    enabled: true
    port: 8080
    path: "/health"
    
  # Performance monitoring
  performance:
    enabled: true
    slow_query_threshold: 5.0  # seconds
    memory_threshold: 500      # MB

# API Server Configuration
api:
  # Server settings
  host: "0.0.0.0"
  port: 8000
  
  # Security settings
  cors_enabled: true
  cors_origins: ["http://localhost:3000", "https://your-domain.com"]
  
  # Rate limiting
  rate_limit:
    enabled: true
    requests_per_minute: 60
    burst: 10
  
  # Authentication
  authentication:
    enabled: true
    api_key_header: "X-API-Key"
    api_keys:
      - "YOUR_SECURE_API_KEY_HERE"
    
    # JWT configuration (optional)
    jwt:
      enabled: false
      secret_key: "YOUR_JWT_SECRET_HERE"
      algorithm: "HS256"
      expire_minutes: 60

# Notification Settings
notifications:
  # Email notifications
  email:
    enabled: false
    smtp_host: "smtp.gmail.com"
    smtp_port: 587
    smtp_username: "your-email@gmail.com"
    smtp_password: "YOUR_EMAIL_PASSWORD_OR_APP_PASSWORD"
    from_email: "ipdefender@your-domain.com"
    to_emails:
      - "admin@your-domain.com"
      - "security@your-domain.com"
    
    # Email templates
    templates:
      threat_detected: "threat_alert.html"
      daily_report: "daily_summary.html"
  
  # Slack notifications
  slack:
    enabled: false
    webhook_url: "https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK"
    channel: "#security-alerts"
    username: "IPDefender Pro"
    
  # Discord notifications
  discord:
    enabled: false
    webhook_url: "https://discord.com/api/webhooks/YOUR/DISCORD/WEBHOOK"

# Plugin System
plugins:
  # Plugin directory
  plugin_dir: "plugins/"
  
  # Auto-load plugins
  auto_load: true
  
  # Enabled plugins
  enabled_plugins:
    - "basic_threat_provider"
    - "cloudflare_firewall"
    - "prometheus_exporter"

# Security Settings
security:
  # Input validation
  validation:
    max_ip_list_size: 1000
    max_request_size: "1MB"
    
  # Audit logging
  audit:
    enabled: true
    log_file: "/var/log/ipdefender/audit.log"
    log_level: "INFO"
    
  # SSL/TLS settings
  ssl:
    enabled: false
    cert_file: "/path/to/certificate.crt"
    key_file: "/path/to/private.key"

# Performance Tuning
performance:
  # Cache settings
  cache:
    enabled: true
    backend: "memory"  # memory, redis
    ttl: 3600
    max_size: 10000
    
    # Redis configuration (if backend is redis)
    redis:
      host: "localhost"
      port: 6379
      db: 0
      password: null
  
  # Async settings
  async:
    max_concurrent_requests: 100
    request_timeout: 30
    connection_pool_size: 20

# Development and Testing
development:
  # Only enable in development environment
  debug_mode: false
  test_mode: false
  mock_providers: false
  
  # Test data
  test_ips:
    - "192.168.1.100"  # Private IP for testing
    - "10.0.0.1"       # Private IP for testing
